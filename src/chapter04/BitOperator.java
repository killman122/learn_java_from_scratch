package chapter04;

//位运算
public class BitOperator {
    public static void main(String[] args) {
        System.out.println(2&3);
        /*
          先得到2的原码 => 2的原码 00000000 00000000 00000000 00000010
          2的补码00000000 00000000 00000000 00000010
          3的补码 => 3的原码 00000000 00000000 00000000 00000011
          3的补码(由于是正数)00000000 00000000 00000000 00000011
          按位与00000000 00000000 00000000 00000010
         */
        System.out.println(~-2);
        /*
          推导
          先得到 -2 的原码10000000 00000000 00000000 00000010
          -2 的补码   负数的反码 = 原码的符号位不变,其他各位取反(0->1,1->0)
          -2 的反码   11111111 11111111 11111111 11111101
          -2 的补码   11111111 11111111 11111111 11111110
          ~-2操作     00000000 00000000 00000000 00000001 => 1
          负数的补码 = 负数的反码+1,负数的反码 = 负数的补码-1
         */
    }

}
