每一种数据都定义了明确的数据类型,在内存中分配了不同大小的内存空间(字节数)
Java中的数据类型分为两大类,基本数据类型和引用数据类型
string 在Java中不属于基本数据类型,属于Java中的一个类

基本数据类型
数值型{
    整数类型,存放整数(byte[1],short[2],int[4],long[8])
    浮点(小数)类型(float[4],double[8])单精度小数,双精度小数
}

字符型(char[2]),存放单个字符'a'
布尔型(boolean[1]),存放true,false

引用数据类型{
    类(class)
    接口(interface)
    数组([])
}

整数类型详解{
    类型          占用存储空间      范围
    byte[字节]    1字节           -128 -- 127   byte n1 = 10;  数据10占用1个字节大小
    short[短整型]  2字节          -(2^15) -- 2^15-1     -32768-32767     short n2 = 10; 数据10占用2字节大小
    int[整型]     4字节           -2^31 -- 2^31-1      -2147483648 - 2147483647     int n3 = 10;数据10占用4个字节
    long[长整型]   8字节          -2^63 -- 2^63-1       long n3 = 10;数据10占用8个字节
}

整型细节{

可以从低字节换为高字节类型数据,但是不能从高字节换为低字节数据

    Java中的整型常量默认为int类型,声明long类型常量必须后面加小写l/大写L
    int n1 = 1; //4个字节
    int n2 = 1l;//错;占用8个字节,再将数据从long转到int会损失数据,赋值会直接报错
    long n3 = 1l;//对
    Java程序中变量使用int,除非数据要溢出需要讲数据类型变为long型
    bit:计算机中的最小存储单位,byte:计算机中的基本存储单元,1byte=8bit;

    long n=3;//8*8=64字节
}

浮点类型细节{
    float类型占用 4个字节,double 类型占用8个字节
    Java的浮点型常量默认为double型数据,声明float型常量,后面需要添加'f'或者'F'
    float n4 = 123.666f;//错误
    double a = 123.33f;//正确
    浮点型常量有两种表示形式
    十进制数形式:如:5.12   512.0f   .666(必须有小数点)
    科学计数法:5.12e2[]

    double num5 = .123 //等价于0.123
    通常情况下,应该使用double型,应为他的数据精度高
    System.out.println(5.12e2);//512.0
    System.out.println(5.12E-2);//0.0512


    当对运算结果是小数的结果进行相等判断时,要小心数据的精度由于计算产生的错误
    应该已两个数的插值的绝对值在某个精度范围内判断
    if(Math.abs(num11-num22)<0.01){

    }
}


字符类型(char)
字符类型可以表示单个字符,字符类型是char,char是两个字节(可以存放汉字)
多个字符可以使用String
char c1 ='a';
char c2 ='\t';
char c3 ='函';
char c4 =97;
